spring:
  messages:
    # 国际化文件存放地址
    basename: i18n/messages
  autoconfigure:
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  redis:
    enabled: true
    host: 127.0.0.1
    port: 6379
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    dynamic:
      # 数据库每个连接池的配置信息
      druid:
        # 初始化大小
        initial-size: 10
        # 最小存留数
        min-idle: 10
        # 最大连接数
        maxActive: 200
        # 配置获取连接等待超时的时间，单位是毫秒
        maxWait: 30000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 30000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000

mybatis:
  configuration:
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl

logging:
  level:
    idea.verlif.justdata: DEBUG

just-data:
  items:
    path: src\test\java\resources\envo
  exception:
    # 接口异常输出方式（CONSOLE - 控制台；FILE - 独立文件；CLIENT - 客户端），多个方式以“,”隔开
    output: CONSOLE
    # 当output中存在FILE时生效
    file: log\exception.log
  file:
    # 是否开启文件系统
    enabled: true
    # 使用文件系统时是否需要登录
    needOnline: false
    # 文件上传模式，决定了上传文件的存储模式（DAY - 按照日期建立文件夹；MONTH - 按照月份建立文件夹；ID - 根据登录用户ID建立文件夹）
    uploadType: ID
    # 文件操作模式，控制用户的文件管理权限（ID - 只允许用户操作自己的ID文件域文件，配合uploadType(ID)使用；ALL - 无限制）
    downloadType: ID
  login:
    enabled: true
    queryUserKey:
      label: demo
      sql: "SELECT user_password FROM t_user WHERE id = @{id}"
  permission:
    enabled: false
    inner-permission: admin
    queryPermission:
      label: demo
      sql: "SELECT permission
        FROM t_permission p
        LEFT JOIN t_role_permission rp ON rp.permission_id = p.permission_id
        LEFT JOIN t_user_role ur ON ur.role_id = rp.role_id
        WHERE ur.user_id = ${userId}"

station:
  api-log:
    pool-info:
      enable: true
      # 日志线程池最大线程数
      max: 200
      # 日志等待队列长度
      length: 1000
  file:
    # 是否允许新上传的文件覆盖已有的同名文件
    cover: false
    path:
      # 文件系统根目录，相对路径或绝对路径
      main: F:/upload